#include "sweep.dtsi"
#include <zephyr/dt-bindings/mipi_dbi/mipi_dbi.h>

&left_encoder {
	status = "okay";
};


&pinctrl {
	spi0_default: spi0_default {
		group1 {
			/* main role: configure P0.01 as SPI clock, P0.02 as SPI MOSI, P0.03 as SPI MISO */
			psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
			<NRF_PSEL(SPIM_MOSI, 0, 20)>;
		};
	};
	
	spi0_sleep: spi0_sleep {
		group1 {
			/* main role: configure P0.01 as SPI clock, P0.02 as SPI MOSI, P0.03 as SPI MISO */
			psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
			<NRF_PSEL(SPIM_MOSI, 0, 20)>;
			low-power-enable;
		};
	};
};

&spi0 {
	status = "okay";
	compatible = "nordic,nrf-spim";
	pinctrl-0 = <&spi0_default>;
	pinctrl-1 = <&spi0_sleep>;
	cs-gpios = <&gpio0 24 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default", "sleep";
	
};

/ {
	mipi_dbi {
		compatible = "zephyr,mipi-dbi-spi";
		reset-gpios = <&gpio1 4 GPIO_ACTIVE_LOW>;
		dc-gpios = <&gpio0 22 GPIO_ACTIVE_HIGH>;
		spi-dev = <&spi0>;
		#address-cells = <1>;
		#size-cells = <0>;
        status = "okay";
		
		ssd1680: ssd1680@0 {
			compatible = "solomon,ssd1680";
			status = "okay";
			reg = <0>;
			width = <152>;
			height = <152>;
			mipi-max-frequency = <4000000>;
            // mipi-mode = "MIPI_DBI_MODE_SPI_3WIRE";
			busy-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
			tssv = <0x80>;
			// rotation = <90>;   // 关键：添加这一行
			
			full {
				border-waveform = <0x05>;
			};
			
			partial {
				border-waveform = <0x3c>;
			};
		};
	};
	
	chosen {
		zephyr,display = &ssd1680;
	};
};